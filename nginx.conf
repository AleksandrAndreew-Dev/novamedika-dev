env NGINX_HOST;
events {
    worker_connections 1024;  # Specify the number of connections
}
http {
    client_max_body_size 50M;

    ssl_certificate /etc/letsencrypt/live/spravka.novamedika.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/spravka.novamedika.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";
    ssl_prefer_server_ciphers off;

    types {
        text/css css;
        application/javascript js;
        image/png png;
        image/jpeg jpg jpeg;
    }


    server {
        listen 80;
        server_name $NGINX_HOST;
        return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;
        server_name $NGINX_HOST;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        location /static/ {
            alias /usr/share/nginx/static/;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        location /media/ {
            alias /usr/share/nginx/media/;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        location / {
            proxy_pass http://web:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cookie_flags ~ secure samesite=Lax;
        }
       location /api/ {
    proxy_pass http://web:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Authorization $remote_user;
}
    }
}

